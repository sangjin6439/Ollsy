server:
  port: 8080

spring:
  profiles:
    active: local
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  config:
    import: optional:.env


  logging:
    level:
      org.hibernate.orm.jdbc.bind: TRACE


  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        highlight_sql: true
    hibernate:
      ddl-auto: create

  security:
    oauth2:
      client:
        registration:

          google:
            client-id: ${OAUTH_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: ${OAUTH_GOOGLE_REDIRECT_URI}

          kakao:
            client-id: ${OAUTH_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH_KAKAO_CLIENT_SECRET}
            scope:
              - profile_nickname
              - account_email
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH_KAKAO_REDIRECT_URI}
            client-name: Kakao
            client-authentication-method: client_secret_post

          naver:
            client-id: ${OAUTH_NAVER_CLIENT_ID}
            client-secret: ${OAUTH_NAVER_CLIENT_SECRET}
            scope:
              - name
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH_NAVER_REDIRECT_URI}

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

jwt:
  secret: ${JWT_SECRET}
  redirect: ${JWT_REDIRECT_URI}
  access-token:
    expiration-time: ${JWT_ACCESS_TOKEN_EXPIRATION_TIME}
  refresh-token:
      expiration-time: ${JWT_REFRESH_TOKEN_EXPIRATION_TIME}

#AWS S3
cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ap-northeast-2
    s3:
      bucket: ollsy
    stack:
      auto: false